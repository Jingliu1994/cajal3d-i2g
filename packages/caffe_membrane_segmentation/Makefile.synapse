#-------------------------------------------------------------------------------
# Synapse Classification Experiment
#
# Note: we lack labels for the first and last two slices in the
#       training data (is not used by the 3d algorithm to avoid
#       "edge" effects).  Hence, we discard these slices
#       when doing training.  It shouldn't really matter because
#       we omit all pixels with label -1 anyway.
#
# April 2015
#-------------------------------------------------------------------------------


include Makefile

SYN_OUT_DIR := SynapseDetection
SYN_IN_DIR := synapse_isbi2013

TRAIN_SLICES := "range(0,70)"
VALID_SLICES := "range(70,100)"
ALL_SLICES := "range(100)"

# set ROTATE to {0,1} for {fewer,more} rotations of training data
ROTATE := 1

# the trained model to use for deploy targets
MODEL := $(SYN_OUT_DIR)/iter_80000.caffemodel


#-------------------------------------------------------------------------------

train-all:
	PYTHONPATH=$(CAFFE_DIR) nohup python train.py  \
		-X $(SYN_IN_DIR)/X_train.mat \
		-Y $(SYN_IN_DIR)/Y_train.mat  \
		--train-slices $(ALL_SLICES) \
		--rotate-data $(ROTATE) \
		--snapshot-prefix $(SYN_OUT_DIR) \
		-s caffe_files/n3-solver.prototxt \
		--omit-labels "[-1,]" \
		-gpu 2 &> nohup.train.synapse &


train-and-valid:
	PYTHONPATH=$(CAFFE_DIR) nohup python train.py  \
		-X $(SYN_IN_DIR)/X_train.mat \
		-Y $(SYN_IN_DIR)/Y_train.mat  \
		--train-slices $(TRAIN_SLICES) \
		--valid-slices $(VALID_SLICES) \
		--rotate-data $(ROTATE) \
		--snapshot-prefix $(SYN_OUT_DIR) \
		-s caffe_files/n3-solver.prototxt \
		--omit-labels "[-1,]" \
		-gpu 2 &> nohup.train.synapse &


deploy-valid:
	PYTHONPATH=$(CAFFE_DIR) nohup python deploy.py  \
		-X $(SYN_IN_DIR)/X_train.mat \
		-s caffe_files/n3-solver.prototxt \
		-m $(MODEL) \
		--eval-slices $(VALID_SLICES) \
		--yhat-file $(SYN_OUT_DIR)/Yhat_valid \
		-gpu 5 &> nohup.valid.synapse &


deploy-test:
	PYTHONPATH=$(CAFFE_DIR) nohup python deploy.py  \
		-X $(SYN_IN_DIR)/X_test.mat \
		-s caffe_files/n3-solver.prototxt \
		-m $(MODEL) \
		--yhat-file $(SYN_OUT_DIR)/Yhat_test \
		-gpu 4 &> nohup.deploy.synapse &


extract-train:
	PYTHONPATH=$(CAFFE_DIR) nohup python deploy.py  \
		-X $(SYN_IN_DIR)/X_train.mat \
		-s caffe_files/n3-solver.prototxt \
		-m $(MODEL) \
		--yhat-file $(SYN_OUT_DIR)/Yhat_train \
		--feature-file $(SYN_OUT_DIR)/Xprime_train \
		-gpu 3 &> nohup.extract.train.synapse  &

extract-test:
	PYTHONPATH=$(CAFFE_DIR) nohup python deploy.py  \
		-X $(SYN_IN_DIR)/X_test.mat \
		-s caffe_files/n3-solver.prototxt \
		-m $(MODEL) \
		--yhat-file $(SYN_OUT_DIR)/Yhat_test \
		--feature-file $(SYN_OUT_DIR)/Xprime_test \
		-gpu 4 &> nohup.extract.test.synapse &


tar-synapse : tar
	cp $(DATA_PATH)/SynapseISBI2013/*.mat $(PACKAGE_PATH)/caffe_files/$(SYN_IN_DIR)
	pushd .. && $(TAR) rvf $(PACKAGE_NAME)/tocluster.tar `find $(PACKAGE_NAME) -name \*.mat -print`
